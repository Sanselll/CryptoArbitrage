name: Scheduled Database Backup

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    env:
      DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}

    steps:
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts 2>/dev/null

      - name: Backup database
        run: |
          ssh -i ~/.ssh/deploy_key $DEPLOY_USER@$DEPLOY_HOST << 'SSHEOF'
          cd /home/deploy/crypto-arbitrage
          BACKUP_FILE="backups/backup-$(date +%Y%m%d_%H%M%S).sql.gz"
          mkdir -p backups
          docker compose -f docker-compose.production.yml exec -T postgres pg_dump -U postgres crypto_arbitrage | gzip > $BACKUP_FILE
          echo "Backup created: $BACKUP_FILE"

          ls -t backups/backup-*.sql.gz | tail -n +8 | xargs -r rm
          SSHEOF

      - name: Clean up
        if: always()
        run: |
          rm ~/.ssh/deploy_key
